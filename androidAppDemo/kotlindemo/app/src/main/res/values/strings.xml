<resources>
    <string name="app_name">AndroidStudyDemo</string>
    <string name="skip">跳转</string>
    <string name="first_activity">First Activity!</string>
    <string name="name">姓名</string>
    <string name="name_value">小明</string>
    <string name="img">电话</string>
    <string name="longtext">测试长文字</string>
    <string name="imagecdes">照片</string>
    <string name="barrier_text">在栅栏的右边在栅栏的右边</string>
    <string name="rb_1">RadioButton1</string>
    <string name="rb_2">RadioButton2</string>
    <string name="rb_3">RadioButton3</string>
    <string name="tvchain1">tvchain1</string>
    <string name="tvchain2">tvchain222222</string>
    <string name="tvchain3">tvchain3</string>
    <string name="leak_first_text">第一页</string>
    <string name="leak_second_text">第二页</string>
    <string name="btn_leak_jump">跳转</string>
    <string name="item_rv_demo_name">TextView</string>
    <string name="handler_msg">TextView</string>

    <string name="btn_method1">新建Handler子类</string>
    <string name="btn_method2">匿名Handler子类</string>
    <string name="btn_method3">Handler.post()</string>
    <string name="detail_back">返回</string>
    <string name="handler_desc">
        使用Handler的原因：将工作线程需操作UI的消息 传递 到主线程，使得主线程可根据工作线程的需求 更新UI，
        从而避免线程操作不安全的问题。\n\n
    Handler使用方式共分为2种：使用Handler.sendMessage（）、使用Handler.post（）\n\n
    在该使用方式中，又分为2种：新建Handler子类（内部类）、匿名 Handler子类
    </string>

    <string name="btn_method4">子线程创建Handler</string>
    <string name="method04text">
        在子线程中 ，创建Handler类对象（错误写法）: \n
        1.Looper.prepare();\n
        2.Handler mHandler = new Handler();  (自动关联当前线程的Looper对象,
        Handler源码:  mLooper = Looper.myLooper();)\n
        3.mHandler.sendMessage(msg);\n
        4.Looper.loop();\n
        但是这只是子线程的handler,不能进行UI操作\n\n
        在子线程中 ，创建Handler类对象（正确写法）: \n
        1.Handler mHandler = new Handler(Looper.getMainLooper());\n
        2.mHandler.sendMessage(msg);\n\n
        总结：\n
        一、主线程的Looper对象自动生成，不需手动生成；而子线程的Looper对象则需手动通过Looper.prepare()创建\n
        二、在子线程若不手动创建Looper对象 则无法生成Handler对象\n
        三、根据Handler的作用（在主线程更新UI），故Handler实例的创建场景 主要在主线程
    </string>

    <string name="handlerresult">测试结果</string>
    <string name="btn_handlerthread_01">点击延迟1s + 显示我爱学习</string>
    <string name="btn_handlerthread_02">点击延迟3s + 显示我不爱学习</string>
    <string name="btn_handlerthread_03">结束线程的消息循环</string>
    <string name="btn_handlerthread">HandlerThread</string>
    <string name="tv_handlerthread">
        主线程要向子线程发送消息，主线程持有子线程的workHandler，利用workHandler发送消息；\n
        子线程要向主线程发送消息，子线程持有主线程的mainHandler，利用mainHandler发送消息；\n

        HandlerThread的本质：继承Thread类 , 封装Handler类。\n
        Thread run()方法内部已经有Looper.prepare()和Looper.loop()，我们不用复写
    </string>
</resources>
